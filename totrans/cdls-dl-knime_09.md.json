["```py\n$dense_1/Sigmoid:0_0$ > 0.5 => 1\nTRUE => 0\n```", "```py\nregexReplace($Col0$,\"[^\\\\s]\" ,\"$0 \")\n```", "```py\nfrom keras.models import Model\nfrom keras.layers import Input, Lambda\nfrom keras import backend as K\n# Define Inputs\nstate1=Input((256,))\nstate2=Input((256,))\nnew_input=Input((1,95))\n# Extract layers\nlstm=input_network.layers[-4]\ndense_softmax=input_network.layers[-1]\ndense_linear=input_network.layers[-2]\n# Apply LSTM Layer on new Inputs\nx, h1, h2=lstm(new_input, initial_state=[state1, state2])\n# Apply the linear layer\nlinear=dense_linear(x)\n# Add lambda\nlinear_div_temp=Lambda(lambda x: x*0.9)(linear)\n# Apply Softmax activation\nprobabilities = dense_softmax(linear_div_temp)\noutput_network = Model(inputs=[new_input, state1, state2], outputs=[probabilities, h1, h2])\n```"]