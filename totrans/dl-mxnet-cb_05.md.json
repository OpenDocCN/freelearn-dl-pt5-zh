["```py\nX = mx.np.array([[0.0, 1.0, 2.0], [3.0, 4.0, 5.0], [6.0, 7.0, 8.0]])\n K = mx.np.array([[0.0, 1.0], [2.0, 3.0]]) convolution(X, K)\n```", "```py\narray([[19., 25.],\n       [37., 43.]])\n```", "```py\nX = mx.np.array([[0.0, 1.0, 2.0], [3.0, 4.0, 5.0], [6.0, 7.0, 8.0]])\n maxpool(X, (2, 2))\n```", "```py\narray([[4., 5.],\n       [7., 8.]])\n```", "```py\ndef create_alexnet_network(num_classes=2):\n    # Returns AlexNet architecture, as defined in MXNet source code\n    net = nn.Sequential()\n    net.add(\n        nn.Conv2D(64, kernel_size=11, strides=4, activation='relu'),\n        nn.MaxPool2D(pool_size=3, strides=2),\n        nn.Conv2D(256, kernel_size=5, padding=2, activation='relu'),\n        nn.MaxPool2D(pool_size=3, strides=2),\n        nn.Conv2D(384, kernel_size=3, padding=1, activation='relu'),\n        nn.Conv2D(384, kernel_size=3, padding=1, activation='relu'),\n        nn.Conv2D(256, kernel_size=3, padding=1, activation='relu'),\n        nn.MaxPool2D(pool_size=3, strides=2),        nn.Flatten(),\n        # Last 3 layers is classifier\n        # Adding dropout for regularization\n        nn.Dense(4096, activation='relu'),\n        nn.Dropout(0.5),\n        nn.Dense(4096, activation='relu'),\n        nn.Dropout(0.5),\n        nn.Dense(num_classes)\n    )\n return net\n```", "```py\n('accuracy', 0.7275)\n```", "```py\nalexnet = gcv.model_zoo.get_model(\"alexnet\", pretrained=True, ctx=ctx)\n```", "```py\n('accuracy', 0.725)\n```", "```py\nresnet50 = gcv.model_zoo.get_model(\"resnet50_v1d\", pretrained=True, ctx=ctx)\n```", "```py\n('accuracy', 0.925)\n```", "```py\ngcv.utils.viz.plot_bbox(image, gt_bboxes, class_names=[\"person\"], ax=axes)\n```", "```py\nfaster_rcnn = gcv.model_zoo.get_model(\"faster_rcnn_fpn_resnet101_v1d_coco\", pretrained=True, ctx=ctx)\n```", "```py\n('VOCMeanAP', 0.6716161702078043)\n Elapsed Time:  249.30912852287292 secs\n```", "```py\nyolo = gcv.model_zoo.get_model(\"yolo3_darknet53_coco\", pretrained=True, ctx=ctx)\n```", "```py\n('VOCMeanAP', 0.5339115787945962)\n Elapsed Time:  113.4049768447876 secs\n```", "```py\npspnet = gcv.model_zoo.get_model('psp_resnet101_coco', pretrained=True, ctx=ctx)\n```", "```py\nPixAcc:  0.4650485574278924\nmIoU  :  0.5612896701751177\nElapsed Time:  341.7681269645691 secs\n```", "```py\ndeeplab = gcv.model_zoo.get_model('deeplab_resnet152_coco', pretrained=True, ctx=ctx)\n```", "```py\nPixAcc:  0.4653841191754281\nmIoU  :  0.5616023247999165\nElapsed Time:  74.66736197471619 secs\n```"]