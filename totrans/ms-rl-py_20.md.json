["```py\npip install tensortrade\n```", "```py\nUSD = Instrument(\"USD\", 2, \"U.S. Dollar\")\nTTC = Instrument(\"TTC\", 8, \"TensorTrade Coin\")\n```", "```py\nx = np.arange(0, 2*np.pi, 2*np.pi / 1000)\np = Stream.source(50*np.sin(3*x) + 100,\n                  dtype=\"float\").rename(\"USD-TTC\")\n```", "```py\ncoinbase = Exchange(\"coinbase\", service=execute_order)(p)\n```", "```py\nfeed = DataFeed([\n    p,\n    p.rolling(window=10).mean().rename(\"fast\"),\n    p.rolling(window=50).mean().rename(\"medium\"),\n    p.rolling(window=100).mean().rename(\"slow\"),\n    p.log().diff().fillna(0).rename(\"lr\")])\n```", "```py\ncash = Wallet(coinbase, 100000 * USD)\nasset = Wallet(coinbase, 0 * TTC)\nportfolio = Portfolio(USD, [cash, asset])\n```", "```py\nreward_scheme = default.rewards.SimpleProfit()\n```", "```py\naction_scheme = default.actions.BSH(cash=cash, asset=asset)\n```", "```py\nenv = default.create(\n    feed=feed,\n    portfolio=portfolio,\n    action_scheme=action_scheme,\n    reward_scheme=reward_scheme,\n    window_size=25,\n    max_allowed_loss=0.6)\n```", "```py\ndef create_env(config):\n    ...\n    return env\nregister_env(\"TradingEnv\", create_env)\n```"]