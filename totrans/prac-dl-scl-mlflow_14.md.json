["```py\n    conda env create -f conda.yaml\n    ```", "```py\nconda activate dl-explain\n```", "```py\n    import transformers\n    import shap\n    from shap.plots import *\n    ```", "```py\n    dl_model = transformers.pipeline(\n        'sentiment-analysis', return_all_scores=True)\n    ```", "```py\n    dl_model(\n        [\"What a great movie! ...if you have no taste.\", \n         \"Not a good movie to spend time on.\"])\n    ```", "```py\n[[{'label': 'NEGATIVE', 'score': 0.00014734962314832956}, {'label': 'POSITIVE', 'score': 0.9998526573181152}], [{'label': 'NEGATIVE', 'score': 0.9997993111610413}, {'label': 'POSITIVE', 'score': 0.00020068213052581996}]]\n```", "```py\n    explainer = shap.Explainer(dl_model) \n    shap_values = explainer([\"What a great movie! ...if you have no taste.\", \"Not a good movie to spend time on.\"])\n    ```", "```py\n    shap.plots.text(shap_values[0, :, \"POSITIVE\"])\n    ```", "```py\nshap.plots.text(shap_values[1, :, \"NEGATIVE\"])\n```", "```py\n    bar(shap_values[0, :,'POSITIVE'])\n    ```", "```py\nbar(shap_values[1, :,'NEGATIVE'])\n```", "```py\n    from transformers import AutoModelForSequenceClassification, AutoTokenizer\n    from transformers_interpret import SequenceClassificationExplainer\n    ```", "```py\n    model_name = \"distilbert-base-uncased-finetuned-sst-2-english\"\n    model = AutoModelForSequenceClassification.from_pretrained(model_name)\n    tokenizer = AutoTokenizer.from_pretrained(model_name)\n    ```", "```py\n    cls_explainer = SequenceClassificationExplainer(model, tokenizer)\n    word_attributions = cls_explainer(\"Not a good movie to spend time on.\")\n    ```", "```py\n    cls_explainer.predicted_class_name\n    ```", "```py\ncls_explainer.visualize(\"distilbert_viz.html\")\n```"]