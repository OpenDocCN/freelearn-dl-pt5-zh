["```py\n$ apt-get install python3-pip jupyter-notebook\n```", "```py\n\"The match could not be played due to the eruption of a tornado\"\n```", "```py\n    !pip3 install autokeras\n    ```", "```py\n    import tensorflow as tf\n    from tensorflow.keras.datasets import reuters \n    import numpy as np\n    import autokeras as ak\n    ```", "```py\n    (x_train, y_train), (x_test, y_test) = reuters_raw()\n    print(x_train.shape)  # (8982,)\n    print(y_train.shape)  # (8982, 1)\n    ```", "```py\n    Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/reuters.npz\n    2113536/2110848 [==============================] - 0s 0us/step\n    Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/reuters_word_index.json\n    557056/550378 [==============================] - 0s 0us/step\n    (8982,)\n    (8982, 1)\n    ```", "```py\n    print(x_train[0][:50])\n    ```", "```py\n    <START> <UNK> <UNK> said as a result of its decemb\n    ```", "```py\nclf = ak.TextClassifier(max_trials=2)\ncbs = [tf.keras.callbacks.EarlyStopping(patience=2)]\n```", "```py\nclf.fit(x_train, y_train, callbacks=cbs)\n```", "```py\nClf.evaluate(x_test, y_test)\n```", "```py\n71/71 [==============================] – 1s 7ms/step – loss: 0.9743 – accuracy: 0.7778\n[0.9742580652236938, 0.777827262878418]\n```", "```py\nModel = clf.export_model()\nmodel.summary()\n```", "```py\ninput_node = ak.TextInput()\noutput_node = ak.TextBlock(block_type=\"ngram\")(input_node)\noutput_node = ak.ClassificationHead()(output_node)\nclf = ak.AutoModel(inputs=input_node, \n                   outputs=output_node, overwrite=True,\n                   max_trials=1)\nclf.fit(x_train, y_train, epochs=2)\n```"]