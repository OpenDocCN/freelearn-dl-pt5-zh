["```py\n    from keras.models import Model\n    from keras.layers import Input\n    ```", "```py\n    new_input = Input((None,70))\n    ```", "```py\n    encoder = input_network.layers[-3]\n    output = encoder(new_input)\n    output_network = Model(inputs=new_input, outputs=output)\n    ```", "```py\n    from keras.models import Model\n    from keras.layers import Input, Lambda\n    from keras import backend as K\n    ```", "```py\n    state1 = Input((256,))\n    state2 = Input((256,))\n    new_input = Input((1,85))\n    ```", "```py\n    decoder_lstm = input_network.layers[-2]\n    decoder_dense = input_network.layers[-1]\n    ```", "```py\n    x, out_h, out_c = decoder_lstm(new_input, initial_state=[state1, state2])\n    probability_output = decoder_dense(x)\n    ```", "```py\n    argmax_output = Lambda(lambda x: K.argmax(x, axis=-1))(probability_output)\n    output_network = Model(inputs=[new_input, state1, state2], outputs=[probability_output, argmax_output, out_h, out_c])\n    ```"]