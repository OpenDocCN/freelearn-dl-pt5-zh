- en: Answers to the Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chapter 1 – Getting Started with Next-Generation Artificial Intelligence through
    Reinforcement Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Is reinforcement learning memoryless? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. Reinforcement learning is memoryless. The agent calculates
    the next state without looking into the past. This is significantly different
    from humans. Humans rely heavily on memory. A CPU-based reinforcement learning
    system finds solutions without experience. Human intelligence merely proves that
    intelligence can solve a problem. No more, no less. An adaptive thinker can then
    imagine new forms of machine intelligence.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: It must be noted that exceptions exist in some cases, but the general rule is a memoryless
    system.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Does reinforcement learning use stochastic (random) functions? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. In the particular Markov decision process model, the
    choices are random. In just two questions, you can see that the Bellman equation
    is memoryless and makes random decisions. No human reasons like that. Being an
    adaptive thinker is a leap of faith. You have to leave who you were behind and
    begin to think in terms of equations.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Is the MDP based on a rule base? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. Human rule-based experience is useless in this process.
    Human thinking is often based on rules of cause and effect, for example. Furthermore,
    the MDP provides efficient alternatives to long consulting times with future users
    who cannot clearly express their problem.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Is the Q function based on the MDP? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. The use of the expression *Q* appeared around the time
    the Bellman equation, based on the MDP, came into fashion. It is more trendy to
    say you are using a Q function than to speak about Bellman, who put all of this
    together in 1957\. The truth is that Andrey Markov was Russian and applied this
    method in 1913 using a dataset of 20,000 letters to predict the future use of
    letters in a novel. He then extended that to a dataset of 100,000 letters. This
    means that the theory was there 100 years ago. *Q* fits our new world of impersonal
    and powerful CPUs.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Is mathematics essential to AI? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. If you master the basics of linear algebra and probability,
    you will be on top of all the technology that is coming. It is worth spending
    a few months' worth of evenings on the subject or taking a MOOC. Otherwise, you
    will depend on others to explain things to you.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Can the Bellman-MDP process in this chapter apply to many problems? (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. You can use this for robotics, market analysis, IoT,
    linguistics, and scores of other problems.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Is it impossible for a machine learning program to create another program
    by itself? (Yes| No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The answer is **no**. It is not impossible. It has already been done by DeepCode:
    [https://www.deepcode.ai/](https://www.deepcode.ai/).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Do not be surprised. Now that you have become an adaptive thinker and know that
    these systems rely on equations, not humans, you can easily understand the fact
    that mathematical systems are not that difficult to reproduce.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Is a consultant required to enter business rules in a reinforcement learning
    program? (Yes| No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. It is only an option. Reinforcement learning in the MDP
    process is memoryless and random. Consultants are there to manage, explain, and
    train in these projects.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Is reinforcement learning supervised or unsupervised? (Supervised | Unsupervised)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **unsupervised**. The whole point is to learn from unlabeled data.
    If the data is labeled, then we enter the world of supervised learning; that will
    be searching for patterns and learning them. At this point, you can easily see
    you are at sea in an adventure—a memoryless, random, and unlabeled world for you
    to discover.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Can Q-learning run without a reward matrix? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. A smart developer could always find a way around this,
    of course. The system requires a starting point. You will see in the second chapter
    that it is quite a task to find the right reward matrix in real-life projects.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 2 – Building a Reward Matrix – Designing Your Datasets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Raw data can be the input to a neuron and transformed with weights. (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes** if the data is in numerical format. If it is in a proper
    numerical format, the input can be multiplied by the weights and biases.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If the data is not in a numerical format, then it requires a numerical encoding phase.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Does a McCulloch-Pitts neuron require a threshold? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. Adding up weights does not mean much if you do not have
    something to measure the value. It took months of work for McCulloch and Pitt
    to put this together. At first, time was in the equation, just like it is in our
    brain. But then, like Joseph Fourier (1768-1830), they found cycles that repeated
    themselves—periods that did not require much more than that neuron.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Warren McCulloch and Walter Pitts invented the first neuron and published a
    paper in 1943\. Legend has it that at age 12 years in 1935, Walter Pitts, a poor
    child living in a bad neighborhood, was chased by bullies and sought refuge in
    a library. There, he discovered *Principia Mathematica*, by *Bertrand Russell*
    and *Alfred Whitehead*. Anyway, not only did he find mistakes in the reasoning,
    but he also sent a letter to Bertrand Russell! From then on, Walter was noted
    for his genius in mathematics. With Warren McCulloch, another genius, they invented
    the first neuron. It seems simple. But it's the result of a number of sleepless
    nights. Just as the invention of the wheel appears simple, nothing better has
    been found to this day. This concept of a neuron is the wheel of AI.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A logistic sigmoid activation function makes the sum of the weights larger. (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. The whole point of a sigmoid function is to reduce the
    sums when necessary to have comparable numbers to work with.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A McCulloch-Pitts neuron sums the weights of its inputs. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. It's only when you sum the weights that they make sense.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A logistic sigmoid function is a log10 operation. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. The sigmoid function is based on Euler's number, *e*,
    a constant that is equal to 2.71828\. This number produces a natural logarithm.
    Leonhard Euler (1707-1783) discovered this in the 18th century with a quill—no
    scientific calculator or computer! Did you notice that the main mathematical functions
    used in AI run far back in history? This aspect of the hype around what we think
    we have found now but has existed for decades, and sometimes centuries, will be
    dealt with in the following chapters.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A logistic softmax is not necessary if a logistic sigmoid function is applied
    to a vector. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. Calculating the sum of several numbers of a vector and
    then dividing each number by that sum gives a view of the proportions involved.
    It is a precious tool to keep in mind.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A probability is a value between –1 and 1\. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. Probabilities lie between 0 and 1.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 3 – Machine Intelligence – Evaluation Functions and Numerical Convergence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Can a human beat a chess engine? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. Today, the highest-level chess tournaments are not between
    humans but between chess engines. Each chess engine software editor prepares for
    these competitions by making their algorithms faster and requiring less CPU. Today,
    a top chess engine running on a smartphone can beat humans. In human-to-human
    chess competitions, the level of chess has reached very high limits of complexity.
    Humans now mostly train against machines.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Humans can estimate decisions better than machines with intuition when it
    comes to large volumes of data. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. The sheer CPU power of an average machine or even a smartphone
    can generate better results than humans with the proper algorithms.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Building a reinforcement learning program with a Q function is a feat in
    itself. Using the results afterward is useless. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. While learning AI, just verifying that the results are
    correct is enough. In real-life applications, the results are used in databases
    or as input to other systems.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Supervised learning decision tree functions can be used to verify that the
    result of the unsupervised learning process will produce reliable, predictable
    results. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. Decision tree functions are very efficient in many cases.
    When large volumes are involved, decision tree functions can be used to analyze
    the results of the machine learning process and contribute to a prediction process.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The results of a reinforcement learning program can be used as input to a scheduling
    system by providing priorities. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. The output of reinforcement learning Q functions can
    be injected as input into another Q function. Several results can be consolidated
    in phase 1 and become the reward matrix of a phase 2 reinforcement learning session.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Can artificial intelligence software think like humans? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**, and **no**. In the early days, this was attempted with
    neuroscience-based models. However, applying mathematical models is presently
    far more efficient.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Who knows what will happen in future research with neuromorphic computing, for
    example? But for the time being, deep learning, the main trend, is based on mathematical
    functions.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 4 – Optimizing Your Solutions with K-Means Clustering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Can a prototype be built with random data in corporate environments? (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**, and **no**. To start developing a prototype, using random
    data can help make sure that the basic algorithm works as planned.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: However, once the prototype is advanced, it will be more reliable to use a well-designed
    dataset. Then, once the training has been accomplished, random data can again
    help to see how your system behaves in all situations.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Do design matrices contain one example per matrix? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. A good design matrix contains one example in each row
    or each column depending on the shape you want it to have. But be careful; a design
    matrix that contains data that is too efficient might *overfit*. That means the
    learning algorithm will be efficient with that data but not adapt to new data.
    On the other hand, if the dataset contains too many errors, then the algorithm
    might *underfit*, meaning it won't learn correctly. A good design matrix should
    contain reliable data, some imprecise data, and some *noise* (some data that can
    influence the algorithm in unreliable ways).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Automated guided vehicles (AGVs) can never be widespread. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The answer is **no**. The sentence is not a correct assertion. AGVs will expand
    endlessly from now on: drones, cars, planes, warehouse vehicles, industrial vehicles,
    and more. AGVs, added to AI and IoT, constitute the fourth industrial revolution.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Can k-means clustering be applied to drone traffic? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. Seeing where traffic builds up will prevent drone jams
    (drones circling and waiting).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Can k-means clustering be applied to forecasting? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. K-means clustering can be used for predictions.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Lloyd''s algorithm is a two-step approach. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**, Lloyd''s algorithm first classifies each data point in the best cluster.
    Then, once that is done, it calculates the geometric center or centroid of that
    center. When no data point changes the cluster anymore, the algorithm has been
    trained.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Do hyperparameters control the behavior of the algorithm? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The answer is **yes**. Hyperparameters determine the course of the computation:
    the number of clusters, features, batch sizes, and more.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Once a program works, the way it is presented does not matter. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. Without a clear presentation of the results, the whole
    training process is confusing at best and useless at worst.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**K-means clustering is only a classification algorithm. It''s not a prediction
    algorithm. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. K-means clustering can be used as a prediction algorithm
    as well.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 5 – How to Use Decision Trees to Enhance K-Means Clustering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The questions will focus on the hyperparameters.
  prefs: []
  type: TYPE_NORMAL
- en: '**The number of k clusters is not that important. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. The number of clusters requires careful selection, possibly
    a trial-and-error approach. Each project will lead to different clusters.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Mini-batches and batches contain the same amount of data. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. "Batch" generally refers to the dataset, and "mini-batch"
    represents a "subset" of data.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**K-means can run without mini-batches. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**, and **no**. If the volume of data remains small, then
    the training epochs can run on the whole dataset. If the data volume exceeds a reasonable
    amount of computer power (CPU or GPU), mini-batches must be created to optimize
    training computation.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Must centroids be optimized for result acceptance? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**, and **no**. Suppose you want to put a key in a keyhole.
    The keyhole represents the centroid of your visual cluster. You must be precise.
    If you are simply throwing a piece of paper in your garbage can, you do not need
    to aim at the perfect center (centroid) of the cluster (marked by the rim of the
    garbage can) to attain that goal. Centroid precision depends on what is asked
    of the algorithm.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**It does not take long to optimize hyperparameters. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**, and **no**. If it's a simple project, it will not take
    long. If you are facing a large dataset, it will take some time to find the optimal
    hyperparameters.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**It sometimes takes weeks to train a large dataset. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. Media hype and hard work are two different worlds. Machine
    learning and deep learning are still tough projects to implement.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Decision trees and random forests are unsupervised algorithms. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**, and **no**. Decision trees can both be used for supervised
    or unsupervised learning. Decision trees can start with a target value, which
    makes them supervised. Random forests can be used in the same way.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 6 – Innovating AI with Google Translate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Is it better to wait until you have a top-quality product before putting
    it on the market? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**, and **no**. Context is everything. In the early 21st
    century, Airbus was struggling to complete the A380, the largest ever passenger
    airplane. Their engineers worked on hundreds of improvements before transporting
    commercial passengers. We would expect no less!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the case of Google Translate, it is a massive no. By putting Google Translate
    online and providing an API, Google encouraged thousands of AI developers, linguists,
    consultants, and users to provide feedback and improvements. Furthermore, Google,
    once again, occupies a large share of the web market.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Considering the investment made, a new product should always be priced high
    to reach the top segment of the market. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes** and **no**. Again, context determines the answer. When
    Ferrari puts a new car on the market, the price has to be high for two reasons; the
    quality of the car and the cost of production make it necessary to do so to make
    the innovation profitable. Also, Ferrari avoids mass production to keep its quality
    at high levels.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: When Amazon Web Services put machine learning on the market with SageMaker,
    it put a "pay-as-you-go" policy in place, starting at a very low end of the market.
    The product had, and has, its limits, but Amazon now receives tremendous volumes
    of feedback and is continuously improving the product.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Inventing a new solution will make it known in itself. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. An invention society is ready to accept will make its way on its own
    no matter what. You might be surprised to know that saving a camera''s projected
    image by drawing it dates so far back in history that nobody knows for sure when
    it was first used. Nobody knows if it was invented or discovered. In any case,
    the first *camera obscura* (the first "cameras") was revolutionary. It is now
    proven that famous painters used the technique. The picture was projected on a
    paper or canvas. The "printer" was manual. The painter was the "printer." However,
    cameras, as we know, only became disruptive in the 20th century.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**AI can solve most problems without using standard non-learning algorithms.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. Non-learning classical algorithms are necessary to create
    datasets, for example. Furthermore, AI relies on cloud servers, architectures,
    standard algorithms in all languages (C++, Java, Python, and others), and Apache
    servers. Even on a self-driving car, the sensors installed require standard hard
    work to get them working and interpreting information before AI comes in to solve
    some of the problems.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: AI is like our brain. Without a body, it cannot function.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Google Translate can satisfactorily translate all languages. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After reading this chapter, you might be surprised to have a **yes** and **no**
    answer. If you are using Google Translate to say "hello," "how are you?", "thanks
    for the message," and similar friendly phrases on your favorite social network
    or in an email, it is good enough.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: But when dealing with more detailed phrases and sentences, Google Translate
    provides random satisfactory results. From a user's perspective, this is bad news.
    For a developer, it is a goldmine!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**If you are not creative, it is no use trying to innovate. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is a massive **no**. You certainly do not need to be either imaginative
    or creative to innovate. Do not let anybody convince you of such nonsense. If
    you are designing a solution and find a missing component, look for some alternative
    components on the web, talk about it, and find people that can help. Then get
    it done through teamwork. This works every time!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Even the great Bill Gates was smart enough to ask Tim Patterson for help to develop
    MS-DOS, and he went on to become a billionaire.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**If you are not a linguist, it is no use bothering with trying to improve
    Google Translate. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**! Once again, never let somebody convince you of such nonsense.
    Innovating is teamwork. If you like Google Translate and you understand this chapter
    and have ideas, team up with a linguist around you or through a social network.
    The world is yours to improve!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Translating is too complicated to understand. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. The way some explain it is too complicated. If you speak a language,
    you are an expert in translating your thoughts into words. With work, you can
    get into the translation business.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**AI has already reached its limits. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Certainly **not**! We have just scratched the surface of both theory and applications.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 7 – Optimizing Blockchains with Naive Bayes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Cryptocurrency is the only use of blockchains today. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. IBM HyperLedger, for example, uses blockchains to organize secure transactions
    in a supply chain environment.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Mining blockchains can be lucrative. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. But it is a risk, like any other mining operation or any speculative
    endeavor. Some companies have huge resources to mine cryptocurrency, meaning that
    they can beat smaller competitors in creating a block.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Blockchains for companies cannot be applied to sales. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Blockchain cloud platforms provide smart contracts and a secure way
    of managing transactions during a sales process.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Smart contracts for blockchains are more accessible to write than standard
    offline contracts. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**, if they are standard contracts, this speeds the transaction up.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: On the other hand, **no**. If the transaction is complex and requires customization,
    a lawyer will have to write the contract, which can then only be used on a blockchain
    cloud platform.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Once a block is in a blockchain network, everyone in the network can read the
    content. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**, if no privacy rule has been enforced.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**, if a privacy rule has been enforced. IBM Hyperledger, for example,
    provides privacy functions.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A block in a blockchain guarantees that absolutely no fraud is possible.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes** and **no**. A block in a blockchain can never be changed again, thereby
    avoiding fraud. Nobody can tamper with the data. However, if the transaction is
    illegal in the first place, then the block will be fraudulent as well.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**There is only one way of applying Bayes'' theorem. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. There are many variations of Bayes'' theorem. Using naive Bayes, for
    example, avoids the conditional probability constraint. But another approach could
    use conditional probability.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Training a naive Bayes dataset requires a standard function. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Gaussian functions, for example, can be used to calculate naive Bayes
    algorithms, among others.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Machine learning algorithms will not change the intrinsic nature of the corporate
    business. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Well-designed machine learning will disrupt every area of business
    as algorithms spread through the company, optimizing processes.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 8 – Solving the XOR Problem with a Feedforward Neural Network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Can the perceptron alone solve the XOR problem? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. The answer would have been no in 1969\. A neural network, or some
    other mathematical process, is necessary to solve this problem. For the record,
    this is a common problem for electric circuits that function with "feedforward"
    electricity, and was solved long ago.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Is the XOR function linearly non-separable? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no** if you use a single neuron, and **yes** if you use a hidden
    layer with at least two neurons. That is a major problem to address in deep learning.
    If you cannot separate the features of a face, for example, in a picture, recognizing
    that face will prove difficult. Imagine a picture with one half of the face in
    shadow and the other half in bright sunlight. Since the eye and features of one
    half are in shadow, a poor deep learning program might only capture half of the
    face, separating the face in the wrong place with a poor edge detection function.
    Linear separability is thus a key aspect of machine learning.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**One of the main goals of layers in a neural network is classification. (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. Once the data is identifiable with a given neural network
    architecture, predictions and many other functions become possible. The key to
    deep learning is to be able to transform data into pieces of information that
    will make sense through the abstraction obtained over the layers.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Is deep learning the only way to classify data? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The answer is **no**. You can classify data with a SQL query, spreadsheets,
    AI, machine learning, and standard source code. Deep learning becomes vital when
    many dimensions of classification are involved: first finding the edges of objects
    in a picture, then forms, and then determining what the object represents. To
    do this with millions of pictures is beyond the scope of standard programming
    or early AI and machine learning programs.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A cost function shows the increase in the cost of a neural network. (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. A cost function determines how much the training costs
    you. Running 100,000 epochs is more expensive than running 50,000 epochs. So,
    at each epoch, the cost of training (how far the system is from its goal) must
    be estimated. Thus, a good cost function will decrease the cost of running a neural
    network.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Can simple arithmetic be enough to optimize a cost function? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. As long as you know to what extent your cost function
    is increasing or decreasing, anything that works is fine.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A feedforward network requires inputs, layers, and an output. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**. Without layers, there is no network.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A feedforward network always requires training with backpropagation. (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is often **yes** in changing environments. Since the field is new,
    we tend to think that once the training is done, the work is done. If the datasets
    are very stable in a repetitive environment, such as recognizing the difference
    between various constant products in a shop, warehouse, or factory, then the neural
    network will do the classification it is designed for. If new products are introduced,
    then training can be initiated again.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**In real-life applications, solutions are only found by following existing
    theories. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. Without academic research, deep learning would not even
    exist. Without universities, the ideas used would be so simple that they would
    never work well.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: On the other hand, researchers need real-life feedback. If we find new ways
    of doing things they recommend, we should publish them to help global research.
    It's a two-way street.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 9 – Abstract Image Classification with Convolutional Neural Networks
    (CNNs)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**A convolutional neural network (CNN) can only process images. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. CNNs can process words, sounds, or video sequences, to classify
    and predict.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A kernel is a preset matrix used for convolutions. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**, and **no**. There are many preset matrices used to process
    images, such as the one used in `Edge_detection_Kernel.py` in this chapter. However,
    in this chapter, kernels were created randomly, and then the network trained their
    weights to fit the target images.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Does pooling have a pooling matrix, or is it random?**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In some cases, a pooling matrix has a size that is an option when the pooling layer
    is added to the model, such as a 2×2 pooling window. However, in AutoML neural
    networks, for example, we can try to run optimizing algorithms that will test
    various sizes to see which one produces the best performance.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The size of the dataset always has to be large. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. A dataset does not have a standard size. It depends on the training
    model. If the target images, for example, do not contain complex features, the
    dataset will be smaller than a complex feature dataset. Furthermore, the `ImageDataGenerator`
    function will expand the data by distorting it with the options provided.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Finding a dataset is not a problem with all the available image banks on
    the web. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**, and **no**. Yes, because if the model remains a standard
    academic one, then the available images (CIFAR, MNIST, or others) will suffice.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: No, because in real-life corporate situations, you will have to build your dataset
    and add images containing *noise*. Noise requires more fine-tuning of the model
    to become reliable and generalized.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Once a CNN is built, training it does not take much time. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. Whatever the model is, training will remain time-consuming
    if you want it to be reliable. As seen in this chapter, a model requires a lot
    of options and mathematical thinking.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A trained CNN model applies to only one type of image. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes** and **no**. There are three main types of overfitting:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Overfitting a model for a certain type of image with absolutely no consequence
    of implementation. In this case, the model classifies and predicts enough to satisfy
    the goals set. Suppose you are using a type of image with a very high definition.
    The CNN will detect the small details we may be trying to detect. However, when
    the application is in production, lower-quality images might make the model fail
    to identify what it had accurately detected with high-quality images.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Overfitting a model that creates implementation problems because it cannot adapt
    to different images at the same time. The model will then go through more training.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Overfitting a model that trains a certain type of image quite well but does
    not fit similar types of images when needed.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Each situation has its constraints. As long as the model works, no general rules
    apply. It is up to you to decide.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A quadratic loss function is not very efficient compared to a cross-entropy
    function. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **no**. Each model has its constraints. Quadratic loss functions
    work fine on some models and do not provide good results on others. This represents
    the main problems of training a model. No general rules will help you. You have
    to use your neurons or write a program that modifies the model automatically.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The performance of a deep learning CNN does not present a real issue with
    modern CPUs and GPUs. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is **yes**, and **no**. If the model runs quickly enough for your
    needs, then performance will not limit the outcome of your project. However, in
    many cases, it remains a problem. Reducing features to focus on the best ones
    is one of the reasons that the layers bring the size to analyze down, layer by
    layer.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 10 – Conceptual Representation Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**The curse of dimensionality leads to reducing dimensions and features in
    machine learning algorithms. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. The volume of data and features makes it necessary to extract the
    main features of an observed event (an image, sound, and words) to make sense
    of it.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Overfitting and underfitting apply to dimensionality reduction as well. Reducing
    the features until the system works in a lab (overfitting) might lead to nowhere
    once the application faces real-life data. Trying to use all the features might
    lead to underfitting because the application solves no problem at all.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Regularization applies not just to data but to every aspect of a project.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Transfer learning determines the profitability of a project. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**, if an application of an AI model in itself was unprofitable the first
    time, but could generate profit if used for a similar type of learning. Reusing
    some functions would generate profit, no doubt.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**, if the first application was extremely profitable but "overfitted"
    to meet the specifications of a given project.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Reading model.h5 does not provide much information. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. No in this case means that the assertion of the sentence is wrong.
    The saved model does provide useful information. Saving the weights of a TensorFlow
    model, for example, is vital during the training process to control the values.
    Furthermore, trained models often use HDF files (`.h5`) to load the trained weights.
    A Hierarchical Data Format (HDF) contains multidimensional arrays of scientific
    data.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Numbers without meaning are enough to replace humans. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**, in the sense that in many cases, mathematics provides enough tools
    to replace humans for many tasks (games, optimization algorithms, and image recognition).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**, in cases where mathematics cannot solve problems that require concepts,
    such as many aspects of NLP.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Chatbots prove that body language doesn''t mean that much. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**, in the sense that in many applications, body language does not provide
    additional information. If only a yes or no answer is required, body language
    will not add much to the conversation.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**, in the sense that if emotional intelligence is required to understand
    the tone of the user, a webcam detecting body language could provide useful information.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Present-day artificial neural networks (ANNs) provide enough theory to solve
    all AI requests. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Artificial neural networks (ANNs) cannot solve thousands of problems,
    for example, translating poetry novels or recognizing images with forms that constantly
    vary.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Chatbots can now replace humans in all situations. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Concepts need to be added. The market provides all the necessary tools.
    It will take some years to be able to speak effectively with chatbots.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Self-driving cars have been approved and do not need conceptual training.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes** and **no**; there is some debate in this area. On the one hand, sensors
    and mathematics (linear algebra, probabilities) might succeed in effectively navigating
    roads in most driving conditions within a few years.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: However, certain problems will require concepts (and more robotics) in critical
    situations. If a self-driving car encounters a wounded person lying on the road,
    what is the best approach? The choices are to call for help, find another person
    if the help arrives too late, pick up the victim, drive them to a hospital (robotics),
    and much more.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Industries can implement AI algorithms for all of their needs. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes** and **no**. In many cases, all of the necessary tools are there to
    be used. If the right team decides to solve a problem with AI and robotics, it
    can be done.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: However, some tools are missing when it comes to addressing particular circumstances;
    for example, real-time management decision tools when faced with unplanned events.
    If a system breaks down, humans can still adapt faster to find alternative solutions
    to continue production.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 11 – Combining Reinforcement Learning and Deep Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**A CNN can be trained to understand an abstract concept? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. A CNN can classify images and make predictions. But CNNs can analyze
    any type of object or representation. An image, for example, can be linked to
    a word or phrase. The image thus becomes a message in itself.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Is it better to avoid concepts and only use real-life images? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Images provide many practical applications, but at some point, more
    is required to solve planning problems, for example.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Planning requires much more than this type of dataset.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Do planning and scheduling mean the same thing? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Planning describes the tasks that must be carried out. Scheduling adds
    a time factor. Planning tells us what to do, and scheduling tells us when.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Is Amazon''s manufacturing patent a revolution? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Manufacturing clothing has been mastered by factories around the world.
    It would be a revolution if something in the process was entirely new. However,
    automation in the apparel industry has been around for 20+ years. The patent is
    a specialized case of elements that exist, like a new brand of car.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**. With such a worldwide distribution, Amazon has come very close to
    the end user. The end user can choose a new garment, and it will be manufactured
    directly on demand. This connectivity will change the apparel manufacturing processes
    and force its competitors to find new ways of making and selling garments.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Learning how warehouses function is not useful. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Online shopping requires more and more warehouse space and processes.
    The number of warehouses will now increase faster than shops. There are many opportunities
    for AI applications in warehouses.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Online marketing does not require AI. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. On the contrary, AI is used by applications for online marketing every
    day, and this will continue for decades.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 12 – AI and the Internet of Things
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Driving quickly to a location is better than safety in any situation. (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes** and **no**.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Self-driving cars face the same difficulties as human-driven cars: getting
    to a location on time, respecting speed limits, or driving as safely as possible.
    Self-driving cars, like humans, are constantly improving their driving abilities
    through experience.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Yes. Sometimes, a self-driving car will perform better on a highway with little
    traffic.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: No. Sometimes, if the highways are dangerous (owing to weather conditions and
    heavy traffic), a self-driving car should take a safer road defined by slow speed
    and little to no traffic. This way, if difficulties occur, the self-driving car
    can slow down and even stop more easily than on a highway.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Self-driving cars will never really replace human drivers. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Nobody can answer that question. As self-driving cars build their abilities
    and experience, they might well end up driving better than humans.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In very unpredictable situations, humans can go off the road to avoid another car
    and back off a bit, for example. It will take more work to get a self-driving
    car to do that.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: One thing is certain, though. If a human is driving all night and falls asleep,
    the self-driving car will detect the head slumping movement, take over, and save
    lives. The self-driving car can also save lives if the human has a medical problem
    while driving.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Will a self-driving fire truck with robots be able to put out a fire one
    day? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. Combining self-driving fire trucks with robots will certainly save
    many lives when a fire department faces difficult fires to extinguish. Those saved
    lives include firefighters who risk their own lives. It might help firefighters
    focus on helping people while robots do tougher jobs. This robot-human team will
    no doubt save thousands of lives in the future.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Do major cities need to invest in self-driving cars or avoid them? (Invest
    | Avoid)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Invest**. With slow but safe self-driving cars, commuters could share public,
    free, or very cheap electric self-driving cars instead of having to drive. It
    would be like having a personal chauffeur.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Would you trust a self-driving bus to take children to school and back? (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This answer will change with time, as technology continues to evolve.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**. Not in the present state of self-driving vehicles. You should not fully
    trust an autonomous vehicle 100%!'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**, when self-driving cars, buses, and trucks prove that they can outperform humans.
    Self-driving vehicles will not make the same mistakes as humans: using smartphones
    while driving, talking to passengers without looking at the road, and many others.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Would you be able to sleep in a self-driving car on a highway? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**, not in the present state of self-driving vehicle technology.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**, when reliability replaces doubts.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Would you like to develop a self-driving program for a project for a city?
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That one is for you to think about! You can also apply the technology to warehouses
    for AGVs by contacting the companies or AGV manufacturers directly.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 13 – Visualizing Networks with TensorFlow 2.x and TensorBoard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**A CNN always has the same number of layers. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. A CNN does not have the same number of layers or even the same type of
    layers. The number of layers is part of the work to optimize an artificial neural
    network.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**ReLU is the best activation function. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. ReLU is an efficient activation function, but there are others such
    as leaky ReLU, softmax, sigmoid, and tanh.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**It is not necessary to compile a sequential classifier. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. The assertion should be yes – it is necessary.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The output of a layer is best viewed without running a prediction. (Yes |
    No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. The output of a layer and a prediction are unrelated. The output of
    the layer can be the transformation of a layer (convolutional, pooling, dropout,
    flattening, other) or a prediction.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The names of the layers mean nothing when viewing their outputs. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. The layers mean everything! A pooling layer and a dropout layer are
    quite different.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**TensorFlow 2.x does not include Keras. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. TensorFlow has now integrated Keras, which helps to build seamless
    neural networks.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Google Colaboratory is just a repository, like GitHub. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Google Colaboratory provides a small but free server to create and
    run programs online.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Google Colaboratory cannot run notebooks. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. It can run notebooks.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**It is possible to run TensorBoard in Google Colaboratory notebooks (Yes |
    No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. This is a useful feature.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Accuracy is displayed in TensorBoard (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. It is an efficient way to evaluate the efficiency of ANNs, for example.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 14 – Preparing the Input of Chatbots with Restricted Boltzmann Machines
    (RBMs) and Principal Component Analysis (PCA)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**RBMs are based on directed graphs. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. RBM graphs are undirected, unsupervised, and memoryless, and the decision-making
    is based on random calculations.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The hidden units of an RBM are generally connected to one another. (Yes |
    No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. The hidden units of an RBM are not generally connected to each other.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Random sampling is not used in an RBM. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. False. Gibbs random sampling is frequently applied to RBMs.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**PCA transforms data into higher dimensions. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. The whole point of PCA is to transform data into a lower number of
    dimensions in higher abstraction dimensions (key dimensions isolated) to find
    the principal component (highest eigenvalue of a covariance matrix), then the
    second highest, down to the lowest values.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**In a covariance matrix, the eigenvector shows the direction of the vector
    representing that matrix, and the eigenvalue shows the size of that vector. (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. Eigenvalues indicate how important a feature is, and eigenvectors
    provide a direction.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**It** **is impossible to represent a human mind in a machine. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. It is possible to a certain extent with sensors and in a limited perimeter.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A machine cannot learn concepts, which is why classical applied mathematics
    is enough to make efficient AI programs for every field. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Never believe that. Progress is being made and will never stop until
    mind machines become mainstream.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 15 – Setting Up a Cognitive NLP UI/CUI Chatbot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Can a chatbot communicate like a human? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Communicating like a human means being human: having a body with body
    language, sensations, odors, fear hormones, and much more. Chatbots only emulate
    these behaviors.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Are chatbots necessarily AI programs? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Many call centers use the "press 1, press 2 … press *n*" method, which
    requires careful organization but no AI.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Chatbots only need words to communicate. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is not a clear-cut one.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**. Simple chatbots can communicate with words in a controlled situation.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**. When polysemy (several meanings for the same word or situation) is
    involved, pictograms and more add more efficient dimensions.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Do humans only chat with words? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Humans express themselves through the tone of their voice, body language,
    or music, for example.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Humans only think in words and numbers. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Certainly not. Humans think in images, sounds, odors, and feelings.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Careful machine learning preparation is necessary to build a cognitive chatbot.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer depends on the context.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**. In limited "press 1 or press 2 " situations, chatbots can perform well
    with limited cognitive capacities.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**. To engage in a real conversation with a human, mental images are the key
    to providing an empathetic exchange.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**For a chatbot to function, a dialog flow needs to be planned. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This depends upon what you want your chatbot to do.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**. It will provide better results in a business environment.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**. If you want the chatbot to talk freely, you need to free it a bit.
    This still requires planning of the dialog, but it is more flexible.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A chatbot possesses general AI, so no prior development is required. (Yes
    | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. This is presently impossible. Only narrow (specific to one or a few
    fields) AI exists in real life, contrary to science fiction movies and media hype.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A chatbot translates fine without any function other than a translation API.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. At this point in the history of translation bots, the translations
    are not quite reliable without additional customization.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Chatbots can already chat like humans in most cases. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Interpreting a language will take quite some more challenging work
    and contributions.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 16 – Improving the Emotional Intelligence Deficiencies of Chatbots
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**When a chatbot fails to provide a correct response, a hotline with actual
    humans needs to take over the conversation. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This comes down to context and practicality.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**. That is what the best solution would be. To have an interactive chat
    service kick in.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**. In many cases, it would be too expensive. A nice support screen could
    do the job and send an email to the support team.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Small talk serves no purpose in everyday life or with chatbots. It is best
    to just get to the point. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Again, this is a matter of context.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**. If it''s an emergency bot, of course!'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**. If the chatbot is there to perform a tedious administrative function,
    some degree of small talk will make the system more bearable.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Data logging can be used to improve speech recognition. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. Absolutely. More data means better machine learning training.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The history of a chatbot agent''s conversations will contain valuable information.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. Absolutely. More feedback means more machine learning progress.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Present-day technology cannot make use of the data logging of a user''s dialogs.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. We can, of course, parse data logging and extract valuable information.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**An RNN uses sequences of data to make predictions. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**, it does.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**An RNN can generate the dialog flow of a chatbot automatically for all applications.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes** and **no**. It can, but the quality is sometimes still terrible at
    this point in the history of automatic dialog flows!'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 17 – Genetic Algorithms in Hybrid Neural Networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**A cell contains 42 chromosomes. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. There are 46 chromosomes in a cell.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A genetic algorithm is deterministic, not random. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. A genetic algorithm is random, which makes it more efficient than many deterministic
    algorithms.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**An evolutionary algorithm means that program code evolves. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There is not a single clear-cut answer.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**. The program runs like any other program.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**. In some ways, when it is used to optimize a neural network in a hybrid neural
    network, it changes the parameters of the system. Also, it is possible to use
    a genetic algorithm to add or take layers out of a CNN, for example.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**It is best for a child to have the same genes as one of the parents even
    after many generations. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Certainly not! We need diverse genes to remain a fit genetic group.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Diversity makes the gene sets weaker. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. The greater the diversity, the richer the genetic pool is to adapt
    and remain fit.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Building a neural network only takes a few lines, and the architecture always
    works. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This depends on what you mean by "work."
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**. Building a neural network only takes a few lines with TensorFlow 2.x,
    for example, and it will work.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**. The neural network will work, but it will most probably not be efficient
    until its architecture and hyperparameters are fine-tuned.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Building a neural network with a genetic algorithm can help optimize the architecture
    of the layers. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. It is possible to extend a genetic algorithm to layer optimizing.
    Each layer can be a gene, and then the various alternatives can be run to check
    their accuracy.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Hybrid neural networks are useless since deep learning will constantly progress.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Deep learning will reach an asymptote, as do all systems. At that point,
    new dimensions can be added to deep learning architecture, such as genetic algorithms.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Would you trust a genetic algorithm to make decisions for you? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**, if the system is properly designed. No if you don''t trust genetic
    algorithms!'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Would you trust a hybrid neural network to optimize the architecture of your
    network? (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**, if the system is properly designed. No, if it is unreliable or biased.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 18 – Neuromorphic Computing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Neuromorphic computing reproduces our mental activity. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. That is the point. Neuromorphic begins with sub-symbolic low-level
    neuronal brain activity stimulations that do not form high-level mental activity
    yet. Our mental activity already uses symbols and contains representations in
    the form of words, images, numbers, and all kinds of constructions in general.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: However, we can say YES if we are referring to the output results translated
    into mental activity. My point is that yes and no answers limit our views of AI.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Neuromorphic computing reproduces our brain activity. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. That is the point! The core concept is to go from brain activity to
    structures formed by neuron spikes.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Semantic Pointer Architecture (SPA) is a hardware architecture. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Semantic pointers are like computer program pointers such as C++ pointers.
    The difference is that they carry a partial meaning of representation to come,
    hence the word "semantic."'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**NEF stands for Neural Engineering Framework. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**, this is true.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Loihi is a classical chip. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Not at all! Loihi is an Intel neurocomputing chip containing a massive
    number of neurons. A human brain contains around 100 billion neurons. Imagine
    that, soon, you''ll have a network of neurocomputing chips (Intel or other) that
    attain that number. Then imagine what can be done with semantic pointers through
    neurocomputing.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Reproducing our brain''s neural activity cannot solve an equation. (Yes |
    No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Of course, we can use neurocomputing to solve equations through the
    SPA approach.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**An ensemble in Nengo contains algorithms. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. But the question was tricky! Basically, Nengo uses a non-symbolic approach
    as discussed at length previously. However, it contains Python tutorials with
    many algorithms solved through neurocomputing, forming a complete problem-solving
    package.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Spiking blocks neuronal activity. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. But again, this is a tricky question. Spiking is reflected in the level
    of activity in a neuron. So, in that respect, the answer is no. But a spiking
    neuron can inhibit another neuron, thereby blocking it indirectly.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Firing patterns can be used to analyze brain activity. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. Firing patterns change in time in neurocomputing, providing useful
    information on how the neurons reach a given state.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Machine learning and deep learning are only metaphors of our brain''s activity.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. That is the core problem associated with deep learning. They are high-level
    representations of our brain''s neuronal activity.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Chapter 19 – Quantum Computing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Beyond the hype, no quantum computer exists. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. False. You can already run a quantum computer on IBM Q''s cloud platform:
    [https://www.research.ibm.com/ibm-q/](https://www.research.ibm.com/ibm-q/).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The following screenshot is the result of one of the real quantum computer
    (IBM) calculations I ran on a quantum score explained in the chapter:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B15438_20_01.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure A.1: IBM quantum computer calculation'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A quantum computer can store data. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Instability prevents any form of storage at this point.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The effect of quantum gates on qubits can be viewed with the Bloch sphere.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. A Bloch sphere will display the state of a qubit.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A mind that thinks with past experiences, images, words, and other bits of everyday
    information, like stored memories, will find deeper solutions to problems that
    mathematics alone cannot solve. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There is no single generally accepted answer for this. Just as qubits, the answer
    is somewhere between yes (1) and no (0)!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**No**. False. Many researchers believe that mathematics alone can solve all
    human problems.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Yes**. True. Mathematics alone cannot replace deep thinking. Even if computers
    have incredible power and can beat human players at chess, for example, they still
    cannot adapt to new situations without going through a design and training process.
    Concepts need to be added and experienced (memory as well).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: I bet that machine mind concepts will become progressively more mainstream to
    solve deep thinking problems.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A quantum computer will solve medical research problems that cannot be solved
    today. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. There is no doubt about that. The sheer computing power of a quantum
    computer can provide exponential DNA sequencing programs for epigenetic research.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A quantum computer can solve mathematical problems exponentially faster than
    classical computers. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Yes**. Classical computers function at 2 × *n* (number of bits), and quantum
    computers run at 2^n (*n* being the number of qubits)!'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Classical computers will soon disappear and smartphone processors too. (Yes |
    No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Quantum computers require such a large amount of space and physical
    stability that this will not happen soon. Furthermore, classical computers and smartphones
    can store data; quantum computers cannot.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**A quantum score cannot be written in source code format but only with a visual
    interface. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. False. IBM, for example, can swap the quantum from score to a QASM
    interface or display both, as shown here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/B15438_20_02.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure A.2: QASM interface'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Quantum simulators can run as fast as quantum computers. (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. Certainly not! A simulator shows how a quantum score would behave on
    a real quantum computer. Although the simulator can help build the score, a quantum
    computer will run exponentially faster than the simulator.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Quantum computers produce intermediate results when they are running calculations.
    (Yes | No)**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No**. This is not possible. The qubits are too unstable. Observing them makes the
    system collapse. However, simulators such as Quirk come in handy. Since they are
    not real, intermediate results can be displayed to design a quantum score.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
