["```py\n$ apt-get install python3-pip jupyter-notebook\n```", "```py\nstate = 0\nfor input in input_sequence:\n     output = f(input, state)\n     state = output\n```", "```py\n    !pip3 install autokeras\n    ```", "```py\n    import tensorflow as tf\n    import pandas as pd \n    import numpy as np\n    import autokeras as ak\n    from sklearn import model_selection\n    ```", "```py\n    emails_dataset = pd.read_csv(\"https://raw.githubusercontent.com/PacktPublishing/Automated-Machine-Learning-with-AutoKeras/main/spam.csv\", encoding=\"latin-1\")\n    ```", "```py\n    emails_dataset.drop(['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'], axis = 1, inplace = True)\n    emails_dataset.rename(columns = {'v1': 'spam', 'v2': 'message'}, inplace = True)\n    emails_dataset['spam'] = emails_dataset['spam'].map({'ham': 0, 'spam': 1})\n    emails_dataset.head()\n    ```", "```py\nx_train, x_test, y_train, y_test = model_selection.train_test_split(emails_dataset.message.to_numpy(), emails_dataset.spam.to_numpy())\n```", "```py\nclf = ak.TextClassifier(max_trials=2)\ncbs = [tf.keras.callbacks.EarlyStopping(patience=2)]\n```", "```py\nclf.fit(x_train, y_train, callbacks=cbs)\n```", "```py\nclf.evaluate(x_test, y_test)\n```", "```py\n44/44 [==============================] - 0s 4ms/step - loss: 0.0491 - accuracy: 0.9849\n[0.04908078908920288, 0.9849246144294739]\n```", "```py\nmodel = clf.export_model()\nmodel.summary()\n```", "```py\n    news_df = pd.read_csv(\"https://archive.ics.uci.edu/ml/machine-learning-databases/00432/Data/News_Final.csv\")\n    ```", "```py\n    media_success_outputs = news_df.LinkedIn.to_numpy(dtype=\"int\")\n    ```", "```py\n    from sklearn.model_selection import train_test_split\n    x_train, x_test, y_train, y_test = train_test_split(text_inputs, media_success_outputs, test_size = 0.2, random_state = 10)\n    ```", "```py\nreg = ak.ImageRegressor(max_trials=2)\ncbs = [tf.keras.callbacks.EarlyStopping(patience=2)]\n```", "```py\nreg.fit(x_train, y_train, callbacks=cbs)\n```", "```py\nreg.evaluate(x_test, y_test)\n```", "```py\n583/583 [==============================] - 3s 5ms/step - loss: 13944.2070 - mean_squared_error: 13944.2070\n\n[13944.20703125, 13944.20703125]\n```", "```py\nmodel = reg.export_model()\nmodel.summary()\n```", "```py\ncbs = [tf.keras.callbacks.EarlyStopping(patience=2)]\ninput_node = ak.TextInput()\noutput_node = ak.TextToIntSequence(max_tokens=20000)(input_node)\noutput_node = ak.TextBlock(block_type='ngram')(input_node)\noutput_node = ak.RegressionHead()(output_node)\nautomodel = ak.AutoModel(inputs=input_node, outputs=output_node, objective='val_mean_squared_error', max_trials=2)\nautomodel.fit(x_train, y_train, callbacks=cbs)\n```", "```py\nautomodel.evaluate(x_test, y_test)\n```", "```py\n583/583 [==============================] - 6s 9ms/step - loss: 13508.9316 - mean_squared_error: 13508.9316\n[13508.931640625, 13508.931640625]\n```"]