["```py\n$ apt-get install python3-pip jupyter-notebook\n```", "```py\n    !pip3 install autokeras\n    ```", "```py\n    import tensorflow as tf\n    import numpy as np\n    import autokeras as ak\n    ```", "```py\n    (x_train, y_train), (x_test, y_test) = imdb_sentiment_raw()\n    print(x_train.shape)  # (25000,)\n    print(y_train.shape)  # (25000, 1)\n    ```", "```py\n    (25000,)\n    (25000, 1)\n    ```", "```py\n    print(x_train[0][:50])\n    ```", "```py\n    <START> vs from it as must exporters ability whole\n    ```", "```py\nclf = ak.TextClassifier(max_trials=2)\ncbs = [tf.keras.callbacks.EarlyStopping(patience=2)]\n```", "```py\nclf.fit(x_train, y_train, callbacks=cbs)\n```", "```py\nclf.evaluate(x_test, y_test)\n```", "```py\n782/782 [==============================] - 41s 52ms/step - loss: 0.3118 - accuracy: 0.8724\n\n[0.31183066964149475, 0.8723599910736084]\n```", "```py\nmodel = clf.export_model()\nmodel.summary()\n```", "```py\nimport tensorflow as tf\ntf.get_logger().setLevel('ERROR')\ndef get_sentiment(val):\n    return \"Positive\" if val == 1 else \"Negative\"\nfor i in range(10):\n    print(x_test[i])\n    print(\"label: %s, prediction: %s\" % (get_sentiment(y_test[i][0]), get_sentiment(clf.predict(x_test[i:i+1])[0][0])))\n```"]