["```py\n\nimport tensorflow_probability as tfp \ntfd = tfp.distributions \nmu = 0 \nsigma = 1.5 \ngaussian_dist = tfd.Normal(loc=mu, scale=sigma)\n```", "```py\n\nimport seaborn as sns \nsamples = gaussian_dist.sample(1000) \nsns.histplot(samples, stat=\"probability\", kde=True) \nplt.show()\n```", "```py\n\npdf_range = np.arange(-4, 4, 0.1) \npdf_values = [] \nfor x in pdf_range: \npdf_values.append(gaussian_dist.prob(x)) \nplt.figure(figsize=(10, 5)) \nplt.plot(pdf_range, pdf_values) \nplt.title(\"Probability density function\", fontsize=\"15\") \nplt.xlabel(\"x\", fontsize=\"15\") \nplt.ylabel(\"probability\", fontsize=\"15\") \nplt.show()\n```", "```py\n\ncdf_range = np.arange(-4, 4, 0.1) \ncdf_values = [] \nfor x in cdf_range: \ncdf_values.append(gaussian_dist.cdf(x)) \nplt.figure(figsize=(10, 5)) \nplt.plot(cdf_range, cdf_values) \nplt.title(\"Cumulative density function\", fontsize=\"15\") \nplt.xlabel(\"x\", fontsize=\"15\") \nplt.ylabel(\"CDF\", fontsize=\"15\") \nplt.show()\n```", "```py\n\nmu = gaussian_dist.mean() \nsigma = gaussian_dist.stddev()\n```", "```py\n\nmu = mu.numpy() \nsigma = sigma.numpy()\n```", "```py\n\nx = 5 \nlog_likelihood = gaussian_dist.log_prob(x) \nnegative_log_likelihood = -log_likelihood\n```"]