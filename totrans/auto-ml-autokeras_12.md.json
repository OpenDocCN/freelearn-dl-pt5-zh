["```py\n$ apt-get install python3-pip jupyter-notebook\n```", "```py\nimport autokeras as ak\nak.AutoModel(\n    inputs=[ak.ImageInput(), ak.TextInput()],\n    outputs[ak.ClassificationHead(), ak.RegressionHead()])\n```", "```py\nimport autokeras as ak\nimage_input = ak.ImageInput()\nimage_output = ak.ImageBlock()(image_input)\ntext_input = ak.TextInput()\ntext_output = ak.TextBlock()(text_input)\noutput = ak.Merge()([image_output, text_output])\nclassification_output = ak.ClassificationHead()(output)\nregression_output = ak.RegressionHead()(output)\nak.AutoModel(\n   inputs=[image_input, text_input],\n   outputs=[classification_output, regression_output])\n```", "```py\n    !pip3 install autokeras\n    ```", "```py\n    import numpy as np\n    import autokeras as ak\n    ```", "```py\n    import numpy as npnum_instances = 100\n    image_data = np.random.rand(num_instances, 32, 32, 3).astype(np.float32)\n    structured_data = np.random.rand(num_instances, 20).astype(np.float32)\n    ```", "```py\n    regression_target = np.random.rand(num_instances, 1).astype(np.float32)\n    classification_target = np.random.randint(5, size=num_instances)\n    ```", "```py\nimport autokeras as akmodel = ak.AutoModel(\n    inputs=[ak.ImageInput(), ak.StructuredDataInput()],\n    outputs=[\n        ak.RegressionHead(metrics=['mae']),\n        ak.ClassificationHead(loss='categorical_crossentropy', metrics=['accuracy'])\n    ],\n    overwrite=True,\n    max_trials=2)\n```", "```py\nmodel.fit(\n    [image_data, structured_data],\n    [regression_target, classification_target],\n    epochs=3)\n```", "```py\nkeras_model = model.export_model()\nkeras_model.summary()\n```", "```py\ninput_node1 = ak.ImageInput()\noutput_node = ak.Normalization()(input_node1)\noutput_node = ak.ImageAugmentation()(output_node)\noutput_node1 = ak.ConvBlock()(output_node)\noutput_node2 = ak.ResNetBlock(version='v2')(output_node)\noutput_node1 = ak.Merge()([output_node1, output_node2])\n\ninput_node2 = ak.StructuredDataInput()\noutput_node = ak.CategoricalToNumerical()(input_node2)\noutput_node2 = ak.DenseBlock()(output_node)\n\noutput_node = ak.Merge()([output_node1, output_node2])\noutput_node1 = ak.ClassificationHead()(output_node)\noutput_node2 = ak.RegressionHead()(output_node)\n\nmodel = ak.AutoModel(\n    inputs=[input_node1, input_node2], \n    outputs=[output_node1, output_node2],\n    overwrite=True,\n    max_trials=2)\n\nmodel.fit(\n    [image_data, structured_data],\n    [classification_target, regression_target],\n    batch_size=32,\n    epochs=3)\n```"]